#!/bin/sh
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

ECHO=/bin/echo
MAKE=gmake

$ECHO "\n** Running unit tests for MPI library\n"

# Build the mpi-test program, which comprises all the unit tests for
# the MPI library...

$ECHO "Bringing mpi-test up to date ... "
if $MAKE mpi-test ; then
  :
else
  $ECHO " "
  $ECHO "Make failed to build mpi-test."
  $ECHO " "
  exit 1
fi

if [ ! -x mpi-test ] ; then
  $ECHO " "
  $ECHO "Cannot find 'mpi-test' program, testing cannot continue."
  $ECHO " "
  exit 1
fi

# Get the list of available test suites...
tests=`./mpi-test list | awk '{print $1}'`
errs=0

# Run each test suite and check the result code of mpi-test
for test in $tests ; do
  $ECHO "$test ... \c"
  if ./mpi-test $test ; then
    $ECHO "passed"
  else
    $ECHO "FAILED"
    errs=1
  fi
done

# If any tests failed, we'll stop at this point
if [ "$errs" = "0" ] ; then
  $ECHO "All unit tests passed"
else
  $ECHO "One or more tests failed"
  exit 1
fi

# Now try to build the 'pi' program, and see if it can compute the
# first thousand digits of pi correctly
$ECHO "\n** Running other tests\n"

$ECHO "Bringing 'pi' up to date ... "
if $MAKE pi ; then
    :
else
    $ECHO "\nMake failed to build pi.\n"
    exit 1
fi

if [ ! -x pi ] ; then
    $ECHO "\nCannot find 'pi' program; testing cannot continue.\n"
    exit 1
fi

./pi 2000 > /tmp/pi.tmp.$$
if cmp tests/pi2k.txt /tmp/pi.tmp.$$ ; then
    $ECHO "Okay!  The pi test passes."
else
    $ECHO "Oops!  The pi test failed. :("
    exit 1
fi

rm -f /tmp/pi.tmp.$$

exit 0

# Here there be dragons
